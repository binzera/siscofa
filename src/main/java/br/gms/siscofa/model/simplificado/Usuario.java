package br.gms.siscofa.model.simplificado;
// Generated 29/06/2017 17:32:00 by Hibernate Tools 4.3.4.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "siscofa", uniqueConstraints = @UniqueConstraint(columnNames = "usuario"))
public class Usuario implements java.io.Serializable {

	private Integer id;
	private Date created;
	private Date updated;
	private String email;
	private String nome;
	private String senha;
	private String usuario;
	private Set<Fazenda> fazendas = new HashSet<Fazenda>(0);

	public Usuario() {
	}

	public Usuario(Date created, Date updated, String usuario) {
		this.created = created;
		this.updated = updated;
		this.usuario = usuario;
	}

	public Usuario(Date created, Date updated, String email, String nome, String senha, String usuario,
			Set<Fazenda> fazendas) {
		this.created = created;
		this.updated = updated;
		this.email = email;
		this.nome = nome;
		this.senha = senha;
		this.usuario = usuario;
		this.fazendas = fazendas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "nome")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "senha")
	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	@Column(name = "usuario", unique = true, nullable = false)
	public String getUsuario() {
		return this.usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Fazenda> getFazendas() {
		return this.fazendas;
	}

	public void setFazendas(Set<Fazenda> fazendas) {
		this.fazendas = fazendas;
	}

}
